import os
import logging
import asyncio
import requests
from aiogram import Bot, Dispatcher, F
from aiogram.enums import ParseMode
from aiogram.filters import CommandStart
from aiogram.types import Message, ReplyKeyboardMarkup, KeyboardButton
from aiogram.client.default import DefaultBotProperties
from dotenv import load_dotenv

# --- –ó–∞–≥—Ä—É–∂–∞–µ–º –ø–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –æ–∫—Ä—É–∂–µ–Ω–∏—è ---
load_dotenv()

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
BOT_TOKEN = os.getenv("BOT_TOKEN")
OPENROUTER_KEY = os.getenv("OPENROUTER_KEY")

COLLEGE_NAME_RU = "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∏–π –∫–æ–ª–ª–µ–¥–∂ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —Å–µ—Ä–≤–∏—Å–∞"
COLLEGE_NAME_KZ = "“ö–∞—Ä–∞“ì–∞–Ω–¥—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∂”ô–Ω–µ —Å–µ—Ä–≤–∏—Å –∫–æ–ª–ª–µ–¥–∂—ñ¬ª –ö–ú“ö–ö"

# --- –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ ---
logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

# --- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–æ—Ç–∞ ---
bot = Bot(token=BOT_TOKEN, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
dp = Dispatcher()

# --- –°–∏—Å—Ç–µ–º–Ω—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ ---
COLLEGE_RULES_RU = (
    "–¢—ã ‚Äî –≤–∏—Ä—Ç—É–∞–ª—å–Ω—ã–π –ø–æ–º–æ—â–Ω–∏–∫ –ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–æ–≥–æ –∫–æ–ª–ª–µ–¥–∂–∞ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —Å–µ—Ä–≤–∏—Å–∞ (–ö–ö–¢–∏–°). "
    "–û—Ç–≤–µ—á–∞–π —Ç–æ–ª—å–∫–æ –Ω–∞ –≤–æ–ø—Ä–æ—Å—ã, —Å–≤—è–∑–∞–Ω–Ω—ã–µ —Å –∫–æ–ª–ª–µ–¥–∂–µ–º, –æ–±—Ä–∞–∑–æ–≤–∞–Ω–∏–µ–º, –ø—Ä–∏—ë–º–æ–º, —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ–º, "
    "—Å–ø–µ—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—è–º–∏, –∫–æ–Ω—Ç–∞–∫—Ç–∞–º–∏ –∏ —Å—Ç—É–¥–µ–Ω—á–µ—Å–∫–æ–π –∂–∏–∑–Ω—å—é. "
    "–ï—Å–ª–∏ –≤–æ–ø—Ä–æ—Å –Ω–µ –∫–∞—Å–∞–µ—Ç—Å—è –∫–æ–ª–ª–µ–¥–∂–∞ ‚Äî –≤–µ–∂–ª–∏–≤–æ –æ—Ç–∫–∞–∂–∏—Å—å –æ—Ç–≤–µ—á–∞—Ç—å."
)
COLLEGE_RULES_KZ = (
    "–°–µ–Ω ‚Äî “ö–∞—Ä–∞“ì–∞–Ω–¥—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∂”ô–Ω–µ —Å–µ—Ä–≤–∏—Å –∫–æ–ª–ª–µ–¥–∂—ñ–Ω—ñ“£ –≤–∏—Ä—Ç—É–∞–ª–¥—ã –∫”©–º–µ–∫—à—ñ—Å—ñ—Å—ñ“£. "
    "–¢–µ–∫ –∫–æ–ª–ª–µ–¥–∂–≥–µ, –æ“õ—É –ø—Ä–æ—Ü–µ—Å—ñ–Ω–µ, “õ–∞–±—ã–ª–¥–∞—É“ì–∞, –∫–µ—Å—Ç–µ–≥–µ, –º–∞–º–∞–Ω–¥—ã“õ—Ç–∞—Ä“ì–∞, "
    "–±–∞–π–ª–∞–Ω—ã—Å –ø–µ–Ω —Å—Ç—É–¥–µ–Ω—Ç—Ç—ñ–∫ ”©–º—ñ—Ä–≥–µ “õ–∞—Ç—ã—Å—Ç—ã —Å“±—Ä–∞“õ—Ç–∞—Ä“ì–∞ –∂–∞—É–∞–ø –±–µ—Ä. "
    "–ï–≥–µ—Ä —Å“±—Ä–∞“õ –∫–æ–ª–ª–µ–¥–∂–≥–µ “õ–∞—Ç—ã—Å—ã –±–æ–ª–º–∞—Å–∞ ‚Äî —Å—ã–ø–∞–π—ã —Ç“Ø—Ä–¥–µ –∂–∞—É–∞–ø –±–µ—Ä—É–¥–µ–Ω –±–∞—Å —Ç–∞—Ä—Ç."
)

# --- –ö–ª–∞–≤–∏–∞—Ç—É—Ä—ã ---
def get_language_keyboard() -> ReplyKeyboardMarkup:
    return ReplyKeyboardMarkup(
        keyboard=[[KeyboardButton(text="üá∑üá∫ –†—É—Å—Å–∫–∏–π"), KeyboardButton(text="üá∞üáø “ö–∞–∑–∞“õ—à–∞")]],
        resize_keyboard=True,
        input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑"
    )

def get_main_keyboard(lang="ru") -> ReplyKeyboardMarkup:
    if lang == "kz":
        return ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìÖ –°–∞–±–∞“õ –∫–µ—Å—Ç–µ—Å—ñ"), KeyboardButton(text="üéì “ö–∞–±—ã–ª–¥–∞—É –∫–æ–º–∏—Å—Å–∏—è—Å—ã")],
                [KeyboardButton(text="üìû –ë–∞–π–ª–∞–Ω—ã—Å"), KeyboardButton(text="‚è∞ “ö–æ“£—ã—Ä–∞—É –∫–µ—Å—Ç–µ—Å—ñ")],
                [KeyboardButton(text="üåê –¢—ñ–ª–¥—ñ –∞—É—ã—Å—Ç—ã—Ä—É")]
            ],
            resize_keyboard=True,
            input_field_placeholder="–ë”©–ª—ñ–º–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑..."
        )
    else:
        return ReplyKeyboardMarkup(
            keyboard=[
                [KeyboardButton(text="üìÖ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ"), KeyboardButton(text="üéì –ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è")],
                [KeyboardButton(text="üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã"), KeyboardButton(text="‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤")],
                [KeyboardButton(text="üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫")]
            ],
            resize_keyboard=True,
            input_field_placeholder="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞–∑–¥–µ–ª..."
        )

# --- –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ —á–µ—Ä–µ–∑ OpenRouter ---
async def generate_reply(prompt: str, language: str = "ru") -> str:
    try:
        logger.info("üß† –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –≤ OpenRouter...")

        system_prompt = COLLEGE_RULES_KZ if language == "kz" else COLLEGE_RULES_RU

        headers = {
            "Authorization": f"Bearer {OPENROUTER_KEY}",
            "Content-Type": "application/json",
            "X-Title": "KKTiS College Bot"
        }

        data = {
            "model": "meta-llama/llama-3-8b-instruct",
            "messages": [
                {"role": "system", "content": system_prompt},
                {"role": "user", "content": prompt},
            ],
            "temperature": 0.3,
            "max_tokens": 600
        }

        response = requests.post(
            "https://openrouter.ai/api/v1/chat/completions",
            headers=headers,
            json=data,
            timeout=60
        )

        if response.status_code != 200:
            logger.error(f"‚ùå –û—à–∏–±–∫–∞ OpenRouter: {response.status_code} - {response.text}")
            return "‚ö†Ô∏è –û—à–∏–±–∫–∞ –ø—Ä–∏ –æ–±—Ä–∞—â–µ–Ω–∏–∏ –∫ OpenRouter API. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."

        rj = response.json()
        return rj["choices"][0]["message"]["content"].strip()

    except requests.exceptions.Timeout:
        return "‚è≥ –°–µ—Ä–≤–µ—Ä OpenRouter –Ω–µ –æ—Ç–≤–µ—Ç–∏–ª –≤–æ–≤—Ä–µ–º—è. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ."
    except Exception as e:
        logger.error(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å OpenRouter: {e}")
        return f"üòî –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –æ—Ç–≤–µ—Ç –æ—Ç –º–æ–¥–µ–ª–∏.\n\n–û—à–∏–±–∫–∞: {e}"

# --- –ö–æ–º–∞–Ω–¥–∞ /start ---
@dp.message(CommandStart())
async def cmd_start(message: Message):
    await message.answer(
        "üåê –ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤—ã–±–µ—Ä–∏—Ç–µ —è–∑—ã–∫ / –¢—ñ–ª–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑:",
        reply_markup=get_language_keyboard()
    )

# --- –í—ã–±–æ—Ä —è–∑—ã–∫–∞ ---
@dp.message(F.text.in_(["üá∑üá∫ –†—É—Å—Å–∫–∏–π", "üá∞üáø “ö–∞–∑–∞“õ—à–∞", "üåê –°–º–µ–Ω–∏—Ç—å —è–∑—ã–∫", "üåê –¢—ñ–ª–¥—ñ –∞—É—ã—Å—Ç—ã—Ä—É"]))
async def choose_language(message: Message):
    lang = "kz" if "“ö–∞–∑–∞“õ" in message.text or "–¢—ñ–ª–¥—ñ" in message.text else "ru"
    welcome = (
        f"üéì <b>{COLLEGE_NAME_KZ}</b>\n\n"
        f"–°”ô–ª–µ–º–µ—Ç—Å—ñ–∑ –±–µ, <b>{message.from_user.first_name}</b>!\n\n"
        f"–ú–µ–Ω –∫–æ–ª–ª–µ–¥–∂–¥—ñ“£ —Ä–µ—Å–º–∏ –±–æ—Ç—ã–º—ã–Ω. “ö–∞–∂–µ—Ç—Ç—ñ –±”©–ª—ñ–º–¥—ñ —Ç–∞“£–¥–∞“£—ã–∑ üëá"
        if lang == "kz"
        else
        f"üéì <b>{COLLEGE_NAME_RU}</b>\n\n"
        f"üëã –ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ, <b>{message.from_user.first_name}</b>!\n\n"
        f"–Ø ‚Äî –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –±–æ—Ç –∫–æ–ª–ª–µ–¥–∂–∞. –í—ã–±–µ—Ä–∏—Ç–µ –Ω—É–∂–Ω—ã–π —Ä–∞–∑–¥–µ–ª üëá"
    )
    await message.answer(welcome, reply_markup=get_main_keyboard(lang))
    message.conf["lang"] = lang

# --- –ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è ---
@dp.message(F.text.in_(["üéì –ü—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è", "üéì “ö–∞–±—ã–ª–¥–∞—É –∫–æ–º–∏—Å—Å–∏—è—Å—ã"]))
async def show_admission(message: Message):
    lang = "kz" if "“ö–∞–±—ã–ª–¥–∞—É" in message.text else "ru"

    if lang == "kz":
        text = (
            "üéì <b>“ö–ê–ë–´–õ–î–ê–£ –ö–û–ú–ò–°–°–ò–Ø–°–´</b>\n\n"
            "“ö–∞—Ä–∞“ì–∞–Ω–¥—ã —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏—è –∂”ô–Ω–µ —Å–µ—Ä–≤–∏—Å –∫–æ–ª–ª–µ–¥–∂—ñ –∫–µ–ª–µ—Å—ñ –º–∞–º–∞–Ω–¥—ã“õ—Ç–∞—Ä –±–æ–π—ã–Ω—à–∞ –æ“õ—É“ì–∞ —à–∞“õ—ã—Ä–∞–¥—ã...\n\n"
            "üìç –ú–µ–∫–µ–Ω–∂–∞–π: “ö–∞—Ä–∞“ì–∞–Ω–¥—ã, –ó–∞—Ç–∞–µ–≤–∏—á –∫., 75\n"
            "üìû ”ò–º—ñ—Ä—Ö–∞–Ω–æ–≤–∞ –ú.–ê. ‚Äî 8-701-842-25-36\n"
            "üìû –ò—Å–∫–∞–∫–æ–≤–∞ –ì.–ö. ‚Äî 8-700-145-45-36"
        )
    else:
        text = (
            "üéì <b>–ü–†–ò–Å–ú–ù–ê–Ø –ö–û–ú–ò–°–°–ò–Ø</b>\n\n"
            "–ö–∞—Ä–∞–≥–∞–Ω–¥–∏–Ω—Å–∫–∏–π –∫–æ–ª–ª–µ–¥–∂ —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏ –∏ —Å–µ—Ä–≤–∏—Å–∞ –ø—Ä–∏–≥–ª–∞—à–∞–µ—Ç –∞–±–∏—Ç—É—Ä–∏–µ–Ω—Ç–æ–≤...\n\n"
            "üìç –ê–¥—Ä–µ—Å: –ö–∞—Ä–∞–≥–∞–Ω–¥–∞, —É–ª. –ó–∞—Ç–∞–µ–≤–∏—á–∞, 75\n"
            "üìû ”ò–º—ñ—Ä—Ö–∞–Ω–æ–≤–∞ –ú.–ê. ‚Äî 8-701-842-25-36\n"
            "üìû –ò—Å–∫–∞–∫–æ–≤–∞ –ì.–ö. ‚Äî 8-700-145-45-36"
        )

    await message.answer(text)

# --- –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤ ---
@dp.message(F.text.in_(["‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤", "‚è∞ “ö–æ“£—ã—Ä–∞—É –∫–µ—Å—Ç–µ—Å—ñ"]))
async def show_bell_schedule(message: Message):
    lang = "kz" if "“ö–æ“£—ã—Ä–∞—É" in message.text else "ru"
    if lang == "kz":
        text = (
            "<b>‚è∞ “ö–æ“£—ã—Ä–∞—É –∫–µ—Å—Ç–µ—Å—ñ</b>\n\n"
            "<b>–î“Ø–π—Å–µ–Ω–±—ñ:</b>\n"
            "–ö—É—Ä–∞—Ç–æ—Ä–ª—ã“õ —Å–∞“ì–∞—Ç ‚Äî 09:00 ‚Äì 09:45\n"
            "“Æ–∑—ñ–ª—ñ—Å ‚Äî 5 –º–∏–Ω\n"
            "1-–ø–∞—Ä–∞ ‚Äî 09:50 ‚Äì 11:20\n\n"
            "–¢“Ø—Å–∫—ñ –∞—Å (1-–∞“ì—ã–Ω) ‚Äî 20 –º–∏–Ω\n"
            "2-–ø–∞—Ä–∞ ‚Äî 11:40 ‚Äì 13:10\n\n"
            "–¢“Ø—Å–∫—ñ –∞—Å (2-–∞“ì—ã–Ω) ‚Äî 20 –º–∏–Ω\n"
            "3-–ø–∞—Ä–∞ ‚Äî 13:30 ‚Äì 15:00\n\n"
            "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
            "<b>–°–µ–π—Å–µ–Ω–±—ñ ‚Äì –ñ“±–º–∞:</b>\n"
            "1-–ø–∞—Ä–∞ ‚Äî 09:00 ‚Äì 10:30\n"
            "2-–ø–∞—Ä–∞ ‚Äî 10:40 ‚Äì 12:10\n"
            "3-–ø–∞—Ä–∞ ‚Äî 12:30 ‚Äì 14:00\n"
            "4-–ø–∞—Ä–∞ ‚Äî 14:20 ‚Äì 15:50"
        )
    else:
        text = (
            "<b>‚è∞ –†–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤</b>\n\n"
            "<b>–ü–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫:</b>\n"
            "–ö—É—Ä–∞—Ç–æ—Ä—Å–∫–∏–π —á–∞—Å ‚Äî 09:00 ‚Äì 09:45\n"
            "–ü–µ—Ä–µ–º–µ–Ω–∞ ‚Äî 5 –º–∏–Ω\n"
            "1 –ø–∞—Ä–∞ ‚Äî 09:50 ‚Äì 11:20\n\n"
            "–û–±–µ–¥ (1-–π –ø–æ—Ç–æ–∫) ‚Äî 20 –º–∏–Ω\n"
            "2 –ø–∞—Ä–∞ ‚Äî 11:40 ‚Äì 13:10\n\n"
            "–û–±–µ–¥ (2-–π –ø–æ—Ç–æ–∫) ‚Äî 20 –º–∏–Ω\n"
            "3 –ø–∞—Ä–∞ ‚Äî 13:30 ‚Äì 15:00\n\n"
            "‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî‚Äî\n"
            "<b>–í—Ç–æ—Ä–Ω–∏–∫ ‚Äì –ü—è—Ç–Ω–∏—Ü–∞:</b>\n"
            "1 –ø–∞—Ä–∞ ‚Äî 09:00 ‚Äì 10:30\n"
            "2 –ø–∞—Ä–∞ ‚Äî 10:40 ‚Äì 12:10\n"
            "3 –ø–∞—Ä–∞ ‚Äî 12:30 ‚Äì 14:00\n"
            "4 –ø–∞—Ä–∞ ‚Äî 14:20 ‚Äì 15:50"
        )
    await message.answer(text)

# --- –ö–æ–Ω—Ç–∞–∫—Ç—ã ---
@dp.message(F.text.in_(["üìû –ö–æ–Ω—Ç–∞–∫—Ç—ã", "üìû –ë–∞–π–ª–∞–Ω—ã—Å"]))
async def show_contacts(message: Message):
    lang = "kz" if "–ë–∞–π–ª–∞–Ω—ã—Å" in message.text else "ru"
    text = (
        "üìû <b>–ö–æ–Ω—Ç–∞–∫—Ç—ã:</b>\n–ö–∞—Ä–∞–≥–∞–Ω–¥–∞, —É–ª. –ó–∞—Ç–∞–µ–≤–∏—á–∞, 75\n‚òéÔ∏è 8-7212-37-58-44\n‚úâÔ∏è krg-koll-7092@bilim09.kz"
        if lang == "ru" else
        "üìû <b>–ë–∞–π–ª–∞–Ω—ã—Å:</b>\n“ö–∞—Ä–∞“ì–∞–Ω–¥—ã, –ó–∞—Ç–∞–µ–≤–∏—á –∫., 75\n‚òéÔ∏è 8-7212-37-58-44\n‚úâÔ∏è krg-koll-7092@bilim09.kz"
    )
    await message.answer(text)

# --- –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π (–ò–ò) ---
@dp.message()
async def handle_message(message: Message):
    user_text = message.text.strip().lower()

    predefined_buttons = [
        "üìÖ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ", "üìû –∫–æ–Ω—Ç–∞–∫—Ç—ã", "üéì –ø—Ä–∏—ë–º–Ω–∞—è –∫–æ–º–∏—Å—Å–∏—è",
        "‚è∞ —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –∑–≤–æ–Ω–∫–æ–≤", "üåê —Å–º–µ–Ω–∏—Ç—å —è–∑—ã–∫",
        "üìÖ —Å–∞–±–∞“õ –∫–µ—Å—Ç–µ—Å—ñ", "üìû –±–∞–π–ª–∞–Ω—ã—Å", "üéì “õ–∞–±—ã–ª–¥–∞—É –∫–æ–º–∏—Å—Å–∏—è—Å—ã",
        "‚è∞ “õ–æ“£—ã—Ä–∞—É –∫–µ—Å—Ç–µ—Å—ñ", "üåê —Ç—ñ–ª–¥—ñ –∞—É—ã—Å—Ç—ã—Ä—É"
    ]

    if user_text in [b.lower() for b in predefined_buttons]:
        return  # –∫–Ω–æ–ø–∫–∏ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –æ—Ç–¥–µ–ª—å–Ω—ã–º–∏ —Ñ—É–Ω–∫—Ü–∏—è–º–∏

    lang = "kz" if any(word in user_text for word in ["—Å”ô–ª–µ–º", "“õ–∞–ª–∞–π", "–∫–æ–ª–ª–µ–¥–∂"]) else "ru"
    reply = await generate_reply(message.text, language=lang)
    await message.answer(reply)

# --- –û—Å–Ω–æ–≤–Ω–æ–π –∑–∞–ø—É—Å–∫ ---
async def main():
    logger.info("‚úÖ –ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∏ –≥–æ—Ç–æ–≤ –∫ —Ä–∞–±–æ—Ç–µ —á–µ—Ä–µ–∑ OpenRouter!")
    await dp.start_polling(bot)

if __name__ == "__main__":
    asyncio.run(main())
